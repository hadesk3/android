// Generated by view binder compiler. Do not edit!
package com.example.ck_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ck_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btStation;

  @NonNull
  public final ImageButton btTrain;

  @NonNull
  public final ImageButton btUser;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imageView7;

  @NonNull
  public final ImageView imageView8;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final CardView station;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final View ticket;

  @NonNull
  public final CardView train;

  @NonNull
  public final TextView txtTicket;

  @NonNull
  public final TextView txtTicket3;

  @NonNull
  public final TextView txtUser;

  @NonNull
  public final TextView txtUser3;

  @NonNull
  public final View user;

  @NonNull
  public final CardView user1;

  @NonNull
  public final View user3;

  @NonNull
  public final View user4;

  @NonNull
  public final View view5;

  private AdminPageBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton btStation,
      @NonNull ImageButton btTrain, @NonNull ImageButton btUser, @NonNull ImageView imageView3,
      @NonNull ImageView imageView4, @NonNull ImageView imageView7, @NonNull ImageView imageView8,
      @NonNull ConstraintLayout linearLayout, @NonNull CardView station,
      @NonNull TextView textView12, @NonNull TextView textView13, @NonNull TextView textView14,
      @NonNull TextView textView19, @NonNull TextView textView4, @NonNull TextView textView8,
      @NonNull TextView textView9, @NonNull View ticket, @NonNull CardView train,
      @NonNull TextView txtTicket, @NonNull TextView txtTicket3, @NonNull TextView txtUser,
      @NonNull TextView txtUser3, @NonNull View user, @NonNull CardView user1, @NonNull View user3,
      @NonNull View user4, @NonNull View view5) {
    this.rootView = rootView;
    this.btStation = btStation;
    this.btTrain = btTrain;
    this.btUser = btUser;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.imageView7 = imageView7;
    this.imageView8 = imageView8;
    this.linearLayout = linearLayout;
    this.station = station;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView14 = textView14;
    this.textView19 = textView19;
    this.textView4 = textView4;
    this.textView8 = textView8;
    this.textView9 = textView9;
    this.ticket = ticket;
    this.train = train;
    this.txtTicket = txtTicket;
    this.txtTicket3 = txtTicket3;
    this.txtUser = txtUser;
    this.txtUser3 = txtUser3;
    this.user = user;
    this.user1 = user1;
    this.user3 = user3;
    this.user4 = user4;
    this.view5 = view5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btStation;
      ImageButton btStation = ViewBindings.findChildViewById(rootView, id);
      if (btStation == null) {
        break missingId;
      }

      id = R.id.btTrain;
      ImageButton btTrain = ViewBindings.findChildViewById(rootView, id);
      if (btTrain == null) {
        break missingId;
      }

      id = R.id.btUser;
      ImageButton btUser = ViewBindings.findChildViewById(rootView, id);
      if (btUser == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageView imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.imageView8;
      ImageView imageView8 = ViewBindings.findChildViewById(rootView, id);
      if (imageView8 == null) {
        break missingId;
      }

      ConstraintLayout linearLayout = (ConstraintLayout) rootView;

      id = R.id.station;
      CardView station = ViewBindings.findChildViewById(rootView, id);
      if (station == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.ticket;
      View ticket = ViewBindings.findChildViewById(rootView, id);
      if (ticket == null) {
        break missingId;
      }

      id = R.id.train;
      CardView train = ViewBindings.findChildViewById(rootView, id);
      if (train == null) {
        break missingId;
      }

      id = R.id.txtTicket;
      TextView txtTicket = ViewBindings.findChildViewById(rootView, id);
      if (txtTicket == null) {
        break missingId;
      }

      id = R.id.txtTicket3;
      TextView txtTicket3 = ViewBindings.findChildViewById(rootView, id);
      if (txtTicket3 == null) {
        break missingId;
      }

      id = R.id.txtUser;
      TextView txtUser = ViewBindings.findChildViewById(rootView, id);
      if (txtUser == null) {
        break missingId;
      }

      id = R.id.txtUser3;
      TextView txtUser3 = ViewBindings.findChildViewById(rootView, id);
      if (txtUser3 == null) {
        break missingId;
      }

      id = R.id.user;
      View user = ViewBindings.findChildViewById(rootView, id);
      if (user == null) {
        break missingId;
      }

      id = R.id.user1;
      CardView user1 = ViewBindings.findChildViewById(rootView, id);
      if (user1 == null) {
        break missingId;
      }

      id = R.id.user3;
      View user3 = ViewBindings.findChildViewById(rootView, id);
      if (user3 == null) {
        break missingId;
      }

      id = R.id.user4;
      View user4 = ViewBindings.findChildViewById(rootView, id);
      if (user4 == null) {
        break missingId;
      }

      id = R.id.view5;
      View view5 = ViewBindings.findChildViewById(rootView, id);
      if (view5 == null) {
        break missingId;
      }

      return new AdminPageBinding((ConstraintLayout) rootView, btStation, btTrain, btUser,
          imageView3, imageView4, imageView7, imageView8, linearLayout, station, textView12,
          textView13, textView14, textView19, textView4, textView8, textView9, ticket, train,
          txtTicket, txtTicket3, txtUser, txtUser3, user, user1, user3, user4, view5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
