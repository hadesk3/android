// Generated by view binder compiler. Do not edit!
package com.example.ck_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ck_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserTicketItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btView;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ImageView imageView6;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtTime;

  @NonNull
  public final TextView txtTrip;

  @NonNull
  public final View view19;

  private UserTicketItemBinding(@NonNull LinearLayout rootView, @NonNull Button btView,
      @NonNull ImageView imageView5, @NonNull ImageView imageView6, @NonNull TextView textView17,
      @NonNull TextView txtDate, @NonNull TextView txtTime, @NonNull TextView txtTrip,
      @NonNull View view19) {
    this.rootView = rootView;
    this.btView = btView;
    this.imageView5 = imageView5;
    this.imageView6 = imageView6;
    this.textView17 = textView17;
    this.txtDate = txtDate;
    this.txtTime = txtTime;
    this.txtTrip = txtTrip;
    this.view19 = view19;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserTicketItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserTicketItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_ticket_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserTicketItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btView;
      Button btView = ViewBindings.findChildViewById(rootView, id);
      if (btView == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtTime;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      id = R.id.txtTrip;
      TextView txtTrip = ViewBindings.findChildViewById(rootView, id);
      if (txtTrip == null) {
        break missingId;
      }

      id = R.id.view19;
      View view19 = ViewBindings.findChildViewById(rootView, id);
      if (view19 == null) {
        break missingId;
      }

      return new UserTicketItemBinding((LinearLayout) rootView, btView, imageView5, imageView6,
          textView17, txtDate, txtTime, txtTrip, view19);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
