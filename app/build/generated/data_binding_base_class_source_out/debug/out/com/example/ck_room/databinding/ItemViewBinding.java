// Generated by view binder compiler. Do not edit!
package com.example.ck_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ck_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ConstraintLayout relativeLayout;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtPlace;

  @NonNull
  public final Button txtPrice;

  @NonNull
  public final TextView txtTime;

  private ItemViewBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageView5,
      @NonNull ConstraintLayout relativeLayout, @NonNull TextView txtName,
      @NonNull TextView txtPlace, @NonNull Button txtPrice, @NonNull TextView txtTime) {
    this.rootView = rootView;
    this.imageView5 = imageView5;
    this.relativeLayout = relativeLayout;
    this.txtName = txtName;
    this.txtPlace = txtPlace;
    this.txtPrice = txtPrice;
    this.txtTime = txtTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      ConstraintLayout relativeLayout = (ConstraintLayout) rootView;

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtPlace;
      TextView txtPlace = ViewBindings.findChildViewById(rootView, id);
      if (txtPlace == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      Button txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      id = R.id.txtTime;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      return new ItemViewBinding((ConstraintLayout) rootView, imageView5, relativeLayout, txtName,
          txtPlace, txtPrice, txtTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
