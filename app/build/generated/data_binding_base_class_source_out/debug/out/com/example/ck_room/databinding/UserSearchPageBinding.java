// Generated by view binder compiler. Do not edit!
package com.example.ck_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ck_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserSearchPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout addGr;

  @NonNull
  public final LinearLayout arrGr;

  @NonNull
  public final CardView bt;

  @NonNull
  public final Button btBack;

  @NonNull
  public final Button btSearch;

  @NonNull
  public final CardView cardView5;

  @NonNull
  public final LinearLayout dateGr;

  @NonNull
  public final Spinner edtArrive;

  @NonNull
  public final TextView edtDate;

  @NonNull
  public final Spinner edtEmail;

  @NonNull
  public final View form;

  @NonNull
  public final View form2;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final RecyclerView recyclerViewmanage;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView txtArrive;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtMail;

  @NonNull
  public final View view;

  private UserSearchPageBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout addGr,
      @NonNull LinearLayout arrGr, @NonNull CardView bt, @NonNull Button btBack,
      @NonNull Button btSearch, @NonNull CardView cardView5, @NonNull LinearLayout dateGr,
      @NonNull Spinner edtArrive, @NonNull TextView edtDate, @NonNull Spinner edtEmail,
      @NonNull View form, @NonNull View form2, @NonNull ImageView imageView4,
      @NonNull RecyclerView recyclerViewmanage, @NonNull TextView title,
      @NonNull TextView txtArrive, @NonNull TextView txtDate, @NonNull TextView txtMail,
      @NonNull View view) {
    this.rootView = rootView;
    this.addGr = addGr;
    this.arrGr = arrGr;
    this.bt = bt;
    this.btBack = btBack;
    this.btSearch = btSearch;
    this.cardView5 = cardView5;
    this.dateGr = dateGr;
    this.edtArrive = edtArrive;
    this.edtDate = edtDate;
    this.edtEmail = edtEmail;
    this.form = form;
    this.form2 = form2;
    this.imageView4 = imageView4;
    this.recyclerViewmanage = recyclerViewmanage;
    this.title = title;
    this.txtArrive = txtArrive;
    this.txtDate = txtDate;
    this.txtMail = txtMail;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserSearchPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserSearchPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_search_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserSearchPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addGr;
      LinearLayout addGr = ViewBindings.findChildViewById(rootView, id);
      if (addGr == null) {
        break missingId;
      }

      id = R.id.arrGr;
      LinearLayout arrGr = ViewBindings.findChildViewById(rootView, id);
      if (arrGr == null) {
        break missingId;
      }

      id = R.id.bt;
      CardView bt = ViewBindings.findChildViewById(rootView, id);
      if (bt == null) {
        break missingId;
      }

      id = R.id.btBack;
      Button btBack = ViewBindings.findChildViewById(rootView, id);
      if (btBack == null) {
        break missingId;
      }

      id = R.id.btSearch;
      Button btSearch = ViewBindings.findChildViewById(rootView, id);
      if (btSearch == null) {
        break missingId;
      }

      id = R.id.cardView5;
      CardView cardView5 = ViewBindings.findChildViewById(rootView, id);
      if (cardView5 == null) {
        break missingId;
      }

      id = R.id.dateGr;
      LinearLayout dateGr = ViewBindings.findChildViewById(rootView, id);
      if (dateGr == null) {
        break missingId;
      }

      id = R.id.edtArrive;
      Spinner edtArrive = ViewBindings.findChildViewById(rootView, id);
      if (edtArrive == null) {
        break missingId;
      }

      id = R.id.edtDate;
      TextView edtDate = ViewBindings.findChildViewById(rootView, id);
      if (edtDate == null) {
        break missingId;
      }

      id = R.id.edtEmail;
      Spinner edtEmail = ViewBindings.findChildViewById(rootView, id);
      if (edtEmail == null) {
        break missingId;
      }

      id = R.id.form;
      View form = ViewBindings.findChildViewById(rootView, id);
      if (form == null) {
        break missingId;
      }

      id = R.id.form2;
      View form2 = ViewBindings.findChildViewById(rootView, id);
      if (form2 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.recyclerViewmanage;
      RecyclerView recyclerViewmanage = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewmanage == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.txtArrive;
      TextView txtArrive = ViewBindings.findChildViewById(rootView, id);
      if (txtArrive == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtMail;
      TextView txtMail = ViewBindings.findChildViewById(rootView, id);
      if (txtMail == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new UserSearchPageBinding((ConstraintLayout) rootView, addGr, arrGr, bt, btBack,
          btSearch, cardView5, dateGr, edtArrive, edtDate, edtEmail, form, form2, imageView4,
          recyclerViewmanage, title, txtArrive, txtDate, txtMail, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
