// Generated by view binder compiler. Do not edit!
package com.example.ck_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ck_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserTicketBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout addGr;

  @NonNull
  public final LinearLayout arrGr;

  @NonNull
  public final Button btBack3;

  @NonNull
  public final ImageView btShare;

  @NonNull
  public final CardView cardView5;

  @NonNull
  public final LinearLayout classGr;

  @NonNull
  public final LinearLayout dateGr;

  @NonNull
  public final TextView edtArrive;

  @NonNull
  public final TextView edtClass;

  @NonNull
  public final TextView edtCode;

  @NonNull
  public final TextView edtDate;

  @NonNull
  public final TextView edtEnd;

  @NonNull
  public final TextView edtFrom;

  @NonNull
  public final TextView edtName;

  @NonNull
  public final TextView edtSeat;

  @NonNull
  public final TextView edtStart;

  @NonNull
  public final TextView edtStatus;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imgCode;

  @NonNull
  public final LinearLayout nameGr;

  @NonNull
  public final LinearLayout seat;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final LinearLayout timeGr;

  @NonNull
  public final TextView tittle;

  @NonNull
  public final TextView txtArrive;

  @NonNull
  public final TextView txtClass;

  @NonNull
  public final TextView txtCode;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtFrom;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtSeat;

  @NonNull
  public final TextView txtTime;

  @NonNull
  public final TextView txtTo;

  @NonNull
  public final View view20;

  @NonNull
  public final View view21;

  @NonNull
  public final View view22;

  @NonNull
  public final View view23;

  @NonNull
  public final View view24;

  @NonNull
  public final View view25;

  private UserTicketBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout addGr,
      @NonNull LinearLayout arrGr, @NonNull Button btBack3, @NonNull ImageView btShare,
      @NonNull CardView cardView5, @NonNull LinearLayout classGr, @NonNull LinearLayout dateGr,
      @NonNull TextView edtArrive, @NonNull TextView edtClass, @NonNull TextView edtCode,
      @NonNull TextView edtDate, @NonNull TextView edtEnd, @NonNull TextView edtFrom,
      @NonNull TextView edtName, @NonNull TextView edtSeat, @NonNull TextView edtStart,
      @NonNull TextView edtStatus, @NonNull ImageView imageView4, @NonNull ImageView imgCode,
      @NonNull LinearLayout nameGr, @NonNull LinearLayout seat, @NonNull TextView textView20,
      @NonNull LinearLayout timeGr, @NonNull TextView tittle, @NonNull TextView txtArrive,
      @NonNull TextView txtClass, @NonNull TextView txtCode, @NonNull TextView txtDate,
      @NonNull TextView txtFrom, @NonNull TextView txtName, @NonNull TextView txtSeat,
      @NonNull TextView txtTime, @NonNull TextView txtTo, @NonNull View view20,
      @NonNull View view21, @NonNull View view22, @NonNull View view23, @NonNull View view24,
      @NonNull View view25) {
    this.rootView = rootView;
    this.addGr = addGr;
    this.arrGr = arrGr;
    this.btBack3 = btBack3;
    this.btShare = btShare;
    this.cardView5 = cardView5;
    this.classGr = classGr;
    this.dateGr = dateGr;
    this.edtArrive = edtArrive;
    this.edtClass = edtClass;
    this.edtCode = edtCode;
    this.edtDate = edtDate;
    this.edtEnd = edtEnd;
    this.edtFrom = edtFrom;
    this.edtName = edtName;
    this.edtSeat = edtSeat;
    this.edtStart = edtStart;
    this.edtStatus = edtStatus;
    this.imageView4 = imageView4;
    this.imgCode = imgCode;
    this.nameGr = nameGr;
    this.seat = seat;
    this.textView20 = textView20;
    this.timeGr = timeGr;
    this.tittle = tittle;
    this.txtArrive = txtArrive;
    this.txtClass = txtClass;
    this.txtCode = txtCode;
    this.txtDate = txtDate;
    this.txtFrom = txtFrom;
    this.txtName = txtName;
    this.txtSeat = txtSeat;
    this.txtTime = txtTime;
    this.txtTo = txtTo;
    this.view20 = view20;
    this.view21 = view21;
    this.view22 = view22;
    this.view23 = view23;
    this.view24 = view24;
    this.view25 = view25;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserTicketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserTicketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_ticket, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserTicketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addGr;
      LinearLayout addGr = ViewBindings.findChildViewById(rootView, id);
      if (addGr == null) {
        break missingId;
      }

      id = R.id.arrGr;
      LinearLayout arrGr = ViewBindings.findChildViewById(rootView, id);
      if (arrGr == null) {
        break missingId;
      }

      id = R.id.btBack3;
      Button btBack3 = ViewBindings.findChildViewById(rootView, id);
      if (btBack3 == null) {
        break missingId;
      }

      id = R.id.btShare;
      ImageView btShare = ViewBindings.findChildViewById(rootView, id);
      if (btShare == null) {
        break missingId;
      }

      id = R.id.cardView5;
      CardView cardView5 = ViewBindings.findChildViewById(rootView, id);
      if (cardView5 == null) {
        break missingId;
      }

      id = R.id.classGr;
      LinearLayout classGr = ViewBindings.findChildViewById(rootView, id);
      if (classGr == null) {
        break missingId;
      }

      id = R.id.dateGr;
      LinearLayout dateGr = ViewBindings.findChildViewById(rootView, id);
      if (dateGr == null) {
        break missingId;
      }

      id = R.id.edtArrive;
      TextView edtArrive = ViewBindings.findChildViewById(rootView, id);
      if (edtArrive == null) {
        break missingId;
      }

      id = R.id.edtClass;
      TextView edtClass = ViewBindings.findChildViewById(rootView, id);
      if (edtClass == null) {
        break missingId;
      }

      id = R.id.edtCode;
      TextView edtCode = ViewBindings.findChildViewById(rootView, id);
      if (edtCode == null) {
        break missingId;
      }

      id = R.id.edtDate;
      TextView edtDate = ViewBindings.findChildViewById(rootView, id);
      if (edtDate == null) {
        break missingId;
      }

      id = R.id.edtEnd;
      TextView edtEnd = ViewBindings.findChildViewById(rootView, id);
      if (edtEnd == null) {
        break missingId;
      }

      id = R.id.edtFrom;
      TextView edtFrom = ViewBindings.findChildViewById(rootView, id);
      if (edtFrom == null) {
        break missingId;
      }

      id = R.id.edtName;
      TextView edtName = ViewBindings.findChildViewById(rootView, id);
      if (edtName == null) {
        break missingId;
      }

      id = R.id.edtSeat;
      TextView edtSeat = ViewBindings.findChildViewById(rootView, id);
      if (edtSeat == null) {
        break missingId;
      }

      id = R.id.edtStart;
      TextView edtStart = ViewBindings.findChildViewById(rootView, id);
      if (edtStart == null) {
        break missingId;
      }

      id = R.id.edtStatus;
      TextView edtStatus = ViewBindings.findChildViewById(rootView, id);
      if (edtStatus == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imgCode;
      ImageView imgCode = ViewBindings.findChildViewById(rootView, id);
      if (imgCode == null) {
        break missingId;
      }

      id = R.id.nameGr;
      LinearLayout nameGr = ViewBindings.findChildViewById(rootView, id);
      if (nameGr == null) {
        break missingId;
      }

      id = R.id.seat;
      LinearLayout seat = ViewBindings.findChildViewById(rootView, id);
      if (seat == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.timeGr;
      LinearLayout timeGr = ViewBindings.findChildViewById(rootView, id);
      if (timeGr == null) {
        break missingId;
      }

      id = R.id.tittle;
      TextView tittle = ViewBindings.findChildViewById(rootView, id);
      if (tittle == null) {
        break missingId;
      }

      id = R.id.txtArrive;
      TextView txtArrive = ViewBindings.findChildViewById(rootView, id);
      if (txtArrive == null) {
        break missingId;
      }

      id = R.id.txtClass;
      TextView txtClass = ViewBindings.findChildViewById(rootView, id);
      if (txtClass == null) {
        break missingId;
      }

      id = R.id.txtCode;
      TextView txtCode = ViewBindings.findChildViewById(rootView, id);
      if (txtCode == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtFrom;
      TextView txtFrom = ViewBindings.findChildViewById(rootView, id);
      if (txtFrom == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtSeat;
      TextView txtSeat = ViewBindings.findChildViewById(rootView, id);
      if (txtSeat == null) {
        break missingId;
      }

      id = R.id.txtTime;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      id = R.id.txtTo;
      TextView txtTo = ViewBindings.findChildViewById(rootView, id);
      if (txtTo == null) {
        break missingId;
      }

      id = R.id.view20;
      View view20 = ViewBindings.findChildViewById(rootView, id);
      if (view20 == null) {
        break missingId;
      }

      id = R.id.view21;
      View view21 = ViewBindings.findChildViewById(rootView, id);
      if (view21 == null) {
        break missingId;
      }

      id = R.id.view22;
      View view22 = ViewBindings.findChildViewById(rootView, id);
      if (view22 == null) {
        break missingId;
      }

      id = R.id.view23;
      View view23 = ViewBindings.findChildViewById(rootView, id);
      if (view23 == null) {
        break missingId;
      }

      id = R.id.view24;
      View view24 = ViewBindings.findChildViewById(rootView, id);
      if (view24 == null) {
        break missingId;
      }

      id = R.id.view25;
      View view25 = ViewBindings.findChildViewById(rootView, id);
      if (view25 == null) {
        break missingId;
      }

      return new UserTicketBinding((ConstraintLayout) rootView, addGr, arrGr, btBack3, btShare,
          cardView5, classGr, dateGr, edtArrive, edtClass, edtCode, edtDate, edtEnd, edtFrom,
          edtName, edtSeat, edtStart, edtStatus, imageView4, imgCode, nameGr, seat, textView20,
          timeGr, tittle, txtArrive, txtClass, txtCode, txtDate, txtFrom, txtName, txtSeat, txtTime,
          txtTo, view20, view21, view22, view23, view24, view25);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
