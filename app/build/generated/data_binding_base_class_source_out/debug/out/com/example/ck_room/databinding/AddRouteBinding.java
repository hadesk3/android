// Generated by view binder compiler. Do not edit!
package com.example.ck_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ck_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddRouteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText arrivalTime;

  @NonNull
  public final Button cancel;

  @NonNull
  public final EditText departureTime;

  @NonNull
  public final Spinner desSpinner;

  @NonNull
  public final EditText destination;

  @NonNull
  public final Button ok;

  @NonNull
  public final EditText sourceDistance;

  @NonNull
  public final Spinner sourceSpinner;

  @NonNull
  public final EditText sourceStation;

  @NonNull
  public final EditText stationId;

  @NonNull
  public final EditText stopNumber;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView textView24;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final TextView textView26;

  @NonNull
  public final EditText trainId;

  @NonNull
  public final TextView trainName;

  @NonNull
  public final TextView txtMenu;

  @NonNull
  public final Button update;

  private AddRouteBinding(@NonNull LinearLayout rootView, @NonNull EditText arrivalTime,
      @NonNull Button cancel, @NonNull EditText departureTime, @NonNull Spinner desSpinner,
      @NonNull EditText destination, @NonNull Button ok, @NonNull EditText sourceDistance,
      @NonNull Spinner sourceSpinner, @NonNull EditText sourceStation, @NonNull EditText stationId,
      @NonNull EditText stopNumber, @NonNull TextView text, @NonNull TextView textView18,
      @NonNull TextView textView19, @NonNull TextView textView20, @NonNull TextView textView22,
      @NonNull TextView textView23, @NonNull TextView textView24, @NonNull TextView textView25,
      @NonNull TextView textView26, @NonNull EditText trainId, @NonNull TextView trainName,
      @NonNull TextView txtMenu, @NonNull Button update) {
    this.rootView = rootView;
    this.arrivalTime = arrivalTime;
    this.cancel = cancel;
    this.departureTime = departureTime;
    this.desSpinner = desSpinner;
    this.destination = destination;
    this.ok = ok;
    this.sourceDistance = sourceDistance;
    this.sourceSpinner = sourceSpinner;
    this.sourceStation = sourceStation;
    this.stationId = stationId;
    this.stopNumber = stopNumber;
    this.text = text;
    this.textView18 = textView18;
    this.textView19 = textView19;
    this.textView20 = textView20;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.textView24 = textView24;
    this.textView25 = textView25;
    this.textView26 = textView26;
    this.trainId = trainId;
    this.trainName = trainName;
    this.txtMenu = txtMenu;
    this.update = update;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddRouteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddRouteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_route, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddRouteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrival_time;
      EditText arrivalTime = ViewBindings.findChildViewById(rootView, id);
      if (arrivalTime == null) {
        break missingId;
      }

      id = R.id.cancel;
      Button cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.departure_time;
      EditText departureTime = ViewBindings.findChildViewById(rootView, id);
      if (departureTime == null) {
        break missingId;
      }

      id = R.id.desSpinner;
      Spinner desSpinner = ViewBindings.findChildViewById(rootView, id);
      if (desSpinner == null) {
        break missingId;
      }

      id = R.id.destination;
      EditText destination = ViewBindings.findChildViewById(rootView, id);
      if (destination == null) {
        break missingId;
      }

      id = R.id.ok;
      Button ok = ViewBindings.findChildViewById(rootView, id);
      if (ok == null) {
        break missingId;
      }

      id = R.id.source_distance;
      EditText sourceDistance = ViewBindings.findChildViewById(rootView, id);
      if (sourceDistance == null) {
        break missingId;
      }

      id = R.id.sourceSpinner;
      Spinner sourceSpinner = ViewBindings.findChildViewById(rootView, id);
      if (sourceSpinner == null) {
        break missingId;
      }

      id = R.id.source_station;
      EditText sourceStation = ViewBindings.findChildViewById(rootView, id);
      if (sourceStation == null) {
        break missingId;
      }

      id = R.id.station_id;
      EditText stationId = ViewBindings.findChildViewById(rootView, id);
      if (stationId == null) {
        break missingId;
      }

      id = R.id.stop_number;
      EditText stopNumber = ViewBindings.findChildViewById(rootView, id);
      if (stopNumber == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.textView24;
      TextView textView24 = ViewBindings.findChildViewById(rootView, id);
      if (textView24 == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.textView26;
      TextView textView26 = ViewBindings.findChildViewById(rootView, id);
      if (textView26 == null) {
        break missingId;
      }

      id = R.id.train_id;
      EditText trainId = ViewBindings.findChildViewById(rootView, id);
      if (trainId == null) {
        break missingId;
      }

      id = R.id.train_name;
      TextView trainName = ViewBindings.findChildViewById(rootView, id);
      if (trainName == null) {
        break missingId;
      }

      id = R.id.txtMenu;
      TextView txtMenu = ViewBindings.findChildViewById(rootView, id);
      if (txtMenu == null) {
        break missingId;
      }

      id = R.id.update;
      Button update = ViewBindings.findChildViewById(rootView, id);
      if (update == null) {
        break missingId;
      }

      return new AddRouteBinding((LinearLayout) rootView, arrivalTime, cancel, departureTime,
          desSpinner, destination, ok, sourceDistance, sourceSpinner, sourceStation, stationId,
          stopNumber, text, textView18, textView19, textView20, textView22, textView23, textView24,
          textView25, textView26, trainId, trainName, txtMenu, update);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
