// Generated by view binder compiler. Do not edit!
package com.example.ck_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ck_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button back;

  @NonNull
  public final EditText dateAvail;

  @NonNull
  public final Button datePickerButton;

  @NonNull
  public final TextView dateTittle;

  @NonNull
  public final Spinner desSpinner;

  @NonNull
  public final Button find;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final Spinner sourceSpinner;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final TextView textView27;

  @NonNull
  public final TextView textView28;

  private SearchBinding(@NonNull LinearLayout rootView, @NonNull Button back,
      @NonNull EditText dateAvail, @NonNull Button datePickerButton, @NonNull TextView dateTittle,
      @NonNull Spinner desSpinner, @NonNull Button find, @NonNull RecyclerView recyclerView,
      @NonNull Spinner sourceSpinner, @NonNull TextView textView17, @NonNull TextView textView21,
      @NonNull TextView textView27, @NonNull TextView textView28) {
    this.rootView = rootView;
    this.back = back;
    this.dateAvail = dateAvail;
    this.datePickerButton = datePickerButton;
    this.dateTittle = dateTittle;
    this.desSpinner = desSpinner;
    this.find = find;
    this.recyclerView = recyclerView;
    this.sourceSpinner = sourceSpinner;
    this.textView17 = textView17;
    this.textView21 = textView21;
    this.textView27 = textView27;
    this.textView28 = textView28;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      Button back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.date_avail;
      EditText dateAvail = ViewBindings.findChildViewById(rootView, id);
      if (dateAvail == null) {
        break missingId;
      }

      id = R.id.datePickerButton;
      Button datePickerButton = ViewBindings.findChildViewById(rootView, id);
      if (datePickerButton == null) {
        break missingId;
      }

      id = R.id.dateTittle;
      TextView dateTittle = ViewBindings.findChildViewById(rootView, id);
      if (dateTittle == null) {
        break missingId;
      }

      id = R.id.desSpinner;
      Spinner desSpinner = ViewBindings.findChildViewById(rootView, id);
      if (desSpinner == null) {
        break missingId;
      }

      id = R.id.find;
      Button find = ViewBindings.findChildViewById(rootView, id);
      if (find == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.sourceSpinner;
      Spinner sourceSpinner = ViewBindings.findChildViewById(rootView, id);
      if (sourceSpinner == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.textView27;
      TextView textView27 = ViewBindings.findChildViewById(rootView, id);
      if (textView27 == null) {
        break missingId;
      }

      id = R.id.textView28;
      TextView textView28 = ViewBindings.findChildViewById(rootView, id);
      if (textView28 == null) {
        break missingId;
      }

      return new SearchBinding((LinearLayout) rootView, back, dateAvail, datePickerButton,
          dateTittle, desSpinner, find, recyclerView, sourceSpinner, textView17, textView21,
          textView27, textView28);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
